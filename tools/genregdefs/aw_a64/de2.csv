#type; DE; Display Engine (DE)
#base; DE 0x01000000

#type; DE_TOP; Display Engine Top

#base; DE_TOP 0x01000000
#irq; DE 127
#regdef; SCLK_GATE;	 	0x000;	DE SCLK Gating Register
#regdef; HCLK_GATE;		0x004;	DE HCLK Gating Register
#regdef; AHB_RESET;		0x008;	DE AHB Reset register
#regdef; SCLK_DIV;		0x00C;	DE SCLK Division register
#regdef; DE2TCON_MUX;	0x010;	MUX register
#regdef; CMD_CTL;		0x014;	

#type; DE_GLB
#base; DE_GLB 0x1100000
#regdef; GLB_CTL;	 	0x000;	Global control register
#regdef; GLB_STS;		0x004;	Global status register
#regdef; GLB_DBUFFER;	0x008;	Global double buffer control register
#regdef; GLB_SIZE;		0x00C;	Global size register

#type; DE_BLD
#base; DE_BLD 0x1101000

#regdef; BLD_EN_COLOR_CTL;	0x0000; BLD_FILL_COLOR_CTL Offset 0x000 BLD fill color control register
#aggreg; CH; 0x0004 6; Pipe [0..5]
#regdef; BLD_FILL_COLOR;	0x0000; BLD fill color register
#regdef; BLD_CH_ISIZE;	0x0004; BLD input memory size register
#regdef; BLD_CH_OFFSET;	0x0008; BLD input memory offset register
#regdef; padding 0; 0x0010; Need for address arithmetics
#aggregend;
#regdef; ROUTE;			0x0080; BLD_CH_RTCTL BLD routing control register (default value 0x00543210)
#regdef; PREMULTIPLY; 	0x0084; BLD pre-multiply control register
#regdef; BKCOLOR; 0x0088;
#regdef; OUTPUT_SIZE; 0x008C;
#regdef; BLD_MODE; 0x0090 6; BLD_CTL SUN8I_MIXER_BLEND_MODE blender0..blaener3 (or more)
#regdef; CK_CTL; 0x00B0;
#regdef; CK_CFG; 0x00B4;
#regdef; CK_MAX; 0x00C0 4;
#regdef; CK_MIN; 0x00E0 4;
#regdef; OUT_CTL; 0x00FC;
#typeend;

#type; DE_CSR
#base; DE_CSR 0x01020000
#regdef; CSR_CTL; 0x000 Global control register
#regdef; INT; 0x004; Interrupt register
#regdef; IFMT; 0x020; Input data attribute register
#regdef; IDATA_SIZE; 0x024; Input data size register
#regdef; IDATA_MEN_PITCH0; 0x030; Input Y/RGB/ARGB memory pitch register
#regdef; IDATA_MEN_PITCH1; 0x034; Input U/UV memory pitch register
#regdef; IDATA_MEN_PITCH2; 0x038; Input V memory pitch register
#regdef; IMEN_LADD0; 0x040; Input Y/RGB/ARGB memory address register0
#regdef; IMEN_HADD0; 0x044; Input Y/RGB/ARGB memory address register1
#regdef; IMEN_LADD1; 0x048; Input U/UV memory address register0
#regdef; IMEN_HADD1; 0x04C; Input U/UV memory address register1
#regdef; IMEN_LADD2; 0x050; Input V memory address register0
#regdef; IMEN_HADD2; 0x054; Input V memory address register1
#regdef; ODATA_SIZE; 0x084; Output data size register
#regdef; ODATA_MEN_PITCH0; 0x090 Output Y/RGB/ARGB memory pitch register
#regdef; ODATA_MEN_PITCH1; 0x094 Output U/UV memory pitch register
#regdef; ODATA_MEN_PITCH2; 0x098 Output V memory pitch register
#regdef; OMEN_LADD0; 0x0A0; Output Y/RGB/ARGB memory address register0
#regdef; OMEN_HADD0; 0x0A4; Output Y/RGB/ARGB memory address register1
#regdef; OMEN_LADD1; 0x0A8; Output U/UV memory address register0
#regdef; OMEN_HADD1; 0x0AC; Output U/UV memory address register1
#regdef; OMEN_LADD2; 0x0B0; Output V memory address register0
#regdef; OMEN_HADD2; 0x0B4; Output V memory address register1
#typeend;

#type; DE_VI
#base; DE_VI1 0x01102000
#base; DE_VI2 0x01102000
#base; DE_VI3 0x01102000

#aggreg; CFG; 0x000 4;
#regdef;  ATTR; 0x000;
#regdef;  SIZE; 0x004;
#regdef;  COORD; 0x008;
#regdef;  PITCH; 0x00C 3; ix=0: Y, ix=1: U/UV channel, ix=3: V channel 
#regdef;  TOP_LADDR; 0x018 3;
#regdef;  BOT_LADDR; 0x024 3;
#aggregend;
#regdef; FCOLOR; 0x0C0 4;
#regdef; TOP_HADDR; 0x0D0 3;
#regdef; BOT_HADDR; 0x0DC 3;
#regdef; OVL_SIZE; 0x0E8; OVL_V overlay window size register
#regdef; HORI; 0x0F0 2;	OVL_V horizontal down sample control register
#regdef; VERT; 0x0F8 2; OVL_V vertical down sample control register
#typeend;

#type; DE_UI
#base; DE_UI1 0x01103000
#base; DE_UI2 0x01104000
#base; DE_UI3 0x01105000

#aggreg; CFG; 0x000 4;
#regdef;  ATTR; 0x000; 
#regdef;  SIZE; 0x004; 
#regdef;  COORD; 0x008; 
#regdef;  PITCH; 0x00C; 
#regdef;  TOP_LADDR; 0x010; 
#regdef;  BOT_LADDR; 0x014; 
#regdef;  FCOLOR; 0x018; 
#regdef;  padding 0; 0x020; Need for address arithmetics
#aggregend;
#regdef; TOP_HADDR; 0x080; 
#regdef; BOT_HADDR; 0x084; 
#regdef; OVL_SIZE; 0x088; 
#typeend;
